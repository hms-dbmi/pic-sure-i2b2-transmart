version: '3.3'
services:

  httpd:
    build:
      context: ./httpd
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - wildfly
    volumes:
      - /usr/local/docker-config/httpd/htdocs/picsureui/settings:/usr/local/apache2/htdocs/picsureui/settings
      - /usr/local/docker-config/httpd/htdocs/psamaui/settings:/usr/local/apache2/htdocs/psamaui/settings
      - /usr/local/docker-config/httpd/cert:/usr/local/apache2/cert
    networks:
      - public

  transmart:
    image: dbmi/i2b2transmart:18.1-Quickstart
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    volumes:
      - /usr/local/docker-config/transmart/transmartConfig:/root/.grails/transmartConfig:rw
    networks:
      - public
    expose:
      - 8080

  solr:
    image: dbmi/solr:4.5.0-tm.release-18.1
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    networks:
      - public
    expose:
      - 8983
    ports:
      - 8983:8983

  fractalis:
    image: sherzinger/fractalis:1.3.1
    environment:
      - FRACTALIS_CONFIG=/config.py
    volumes:
      - /usr/local/docker-config/fractalis/config.py:/config.py
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    command: gunicorn -w 3 -b :5000 --timeout 90 --log-file - fractalis:app
    networks:
      - public
    expose:
      - 5000
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - worker

  worker:
    image: sherzinger/fractalis:1.3.1
    environment:
      - FRACTALIS_CONFIG=/config.py
    volumes:
      - /usr/local/docker-config/fractalis/config.py:/config.py
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    command: celery worker -A fractalis:celery -l info --autoscale 16,4
    networks:
      - public
    restart: always
    depends_on:
      - redis
      - rabbitmq

  redis:
    image: redis:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    command: >
      sh -c "redis-server
      && redis-cli CONFIG SET maxmemory 4gb
      && redis-cli CONFIG SET maxmemory-policy allkeys-lru
      && redis-cli CONFIG SET save ''
      && redis-cli CONFIG SET appendonly no"
    networks:
      - public

  rabbitmq:
    image: rabbitmq:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    networks:
      - public

  i2b2-wildfly:
    image: dbmi/i2b2-wildfly:1.7.09c-18.1-beta-hotfix
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
    volumes:
      - /usr/local/docker-config/i2b2-wildfly/wildfly/standalone/configuration/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml:rw
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    restart: always
    networks:
      - public
    expose:
      - 9090

  wildfly:
    image: jboss/wildfly:15.0.1.Final
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx2g -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
    restart: always
    environment:
      - RESULT_FORMAT=json
      - IRCT_TARGET_URL=http://httpd/irct
    expose:
      - 8080
    ports:
      - 8787:8787
    networks:
      - public
    entrypoint: /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 --debug 0.0.0.0:8787
    user: root
    volumes:
      - /usr/local/docker-config/wildfly/modules/system/layers/base/com/sql/:/opt/jboss/wildfly/modules/system/layers/base/com/sql/
      - /usr/local/docker-config/wildfly/deployments/:/opt/jboss/wildfly/standalone/deployments/
      - /usr/local/docker-config/wildfly/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
      - /usr/local/docker-config/wildfly/resources/activation.mustache:/opt/jboss/wildfly/standalone/configuration/activation.mustache
    depends_on:
      - copy-pic-sure-war
      - copy-pic-sure-auth-war
      - copy-pic-sure-irct-resource
      - copy-irct

  copy-pic-sure-war:
    image: dbmi/picsure2:picsure246-jndi.7c32223
    user: root
    volumes:
      - /usr/local/docker-config/wildfly/deployments:/var/tmp
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/pic-sure-api-2.war /var/tmp/pic-sure-api-2.war

  copy-irct:
    image: dbmi/irct:master_72135ce
    user: root
    volumes:
      - /usr/local/docker-config/wildfly/deployments:/var/tmp
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/IRCT-CL.war /var/tmp/IRCT-CL.war

  copy-pic-sure-irct-resource:
    image: dbmi/pic-sure-irct-resource:picsure246-jndi.ea3c615_jason
    user: root
    volumes:
      - /usr/local/docker-config/wildfly/deployments:/var/tmp
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/pic-sure-irct-resource.war /var/tmp/pic-sure-irct-resource.war

  copy-pic-sure-auth-war:
    image: dbmi/pic-sure-auth-services:master_4bbe3c0
    user: root
    volumes:
      - /usr/local/docker-config/wildfly/deployments:/var/tmp
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/pic-sure-auth-services.war /var/tmp/pic-sure-auth-services.war

networks:
  public:
