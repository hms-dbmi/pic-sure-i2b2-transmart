version: '3.3'
services:

  httpd:
    build:
      context: ./httpd
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    volumes:
      - ./pic-sure-auth-ui/src/main/webapp:/usr/local/apache2/htdocs
      - ./pic-sure-auth-ui/target/webjars/META-INF/resources/webjars:/usr/local/apache2/htdocs/webjars
      - ./pic-sure-auth-ui/src/main/resources:/usr/local/apache2/htdocs/settings
    networks:
      - public

  # i2b2transmart stack ##
  # transmart
  transmart:
    image: dbmi/i2b2transmart:${i2b2transmart_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    depends_on:
      - httpd
      - solr
      - rserve
    #  - db
    volumes:
      - rserve-jobs:/tmp:rw
    networks:
      - public
    expose:
      - 8080

  # Rserve
  rserve:
    image: dbmi/rserve:${rserve_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    expose:
      - 6311
    volumes:
      - rserve-jobs:/tmp:rw
    networks:
      - public

  # solr
  solr:
    image: dbmi/solr:${solr_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    networks:
      - public
    expose:
      - 8983
    ports:
      - 8983:8983

  ## Fractalis Stack ##
  fractalis:
    image: sherzinger/fractalis:${fractalis_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    volumes:
      - ./config/fractalis/config.py:/config.py
    environment:
      - FRACTALIS_CONFIG=/config.py
    command: gunicorn -w 3 -b :5000 --timeout 90 --log-file - fractalis:app
    networks:
      - public
    expose:
      - 5000
    restart: always
    depends_on:
      - irct
      - redis
      - rabbitmq
      - worker

  worker:
    image: sherzinger/fractalis:${fractalis_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    volumes:
      - ./config/fractalis/config.py:/config.py
    environment:
      - FRACTALIS_CONFIG=/config.py
    command: celery worker -A fractalis:celery -l info --autoscale 16,4
    networks:
      - public
    restart: always
    depends_on:
      - redis
      - rabbitmq

  redis:
    image: redis:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    command: >
      sh -c "redis-server
      && redis-cli CONFIG SET maxmemory 4gb
      && redis-cli CONFIG SET maxmemory-policy allkeys-lru
      && redis-cli CONFIG SET save ''
      && redis-cli CONFIG SET appendonly no"
    networks:
      - public

  rabbitmq:
    image: rabbitmq:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    networks:
      - public

  ## PIC-SURE API Stack ##
  # IRCT
  irct:
    image: dbmi/irct:${irct_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
      - httpd
      - i2b2-wildfly
    env_file:
      - ${ENV_FILE}
    restart: always
    networks:
      - public
    expose:
      - 8080

  # PIC-SURE i2b2-wildfly resource
  i2b2-wildfly:
    image: dbmi/i2b2-wildfly:${i2b2_wildfly_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
    restart: always
    networks:
      - public
    expose:
      - 9090

  ## PIC-SURE API Stack ##
  # PICSURE-2.0
  picsure2:
    image: dbmi/picsure2:${picsure2_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
      - httpd
      - irctdb
    env_file:
      - ${PICSURE2_ENV}
    restart: always
    expose:
      - 8081
    ports:
      - 8081:8081
    command: --server-config=standalone.xml

  picsureauth:
    build:
      context: pic-sure-auth-services
      dockerfile: Dockerfile
    command: --debug *:8787
    depends_on:
      - irctdb
    env_file:
      - ${PICSUREAUTH_ENV}
    expose:
      - 8080
    ports:
      - 8080:8080
      - 8787:8787
    networks:
      - public

  # picsuredb:
  #   image: dbmi/picsure-db:${picsure_mysql_version}
  #   labels:
  #     - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
  #     - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${PICSURE2_MYSQL_ROOT_PASSWORD:-password}
  #     - MYSQL_DATABASE=picsure
  #   volumes:
  #     - picsure-data:/var/lib/mysql
  #   command: --datadir=/mysql/data
  #   restart: always
  #   expose:
  #     - 3306
  #   ports:
  #     - 3306:3306
  #   networks:
  #     - public

  # IRCT DB
  irctdb:
    image: dbmi/irct-db:${irctdb_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    command: --datadir=/mysql/data
    networks:
      - public
    expose:
      - 3306
    # PIC-SURE database exposed port
    ports:
      - ${DOCKER_IRCT_DB_PORT:-3306}:3306
    volumes:
      - irct-data:/mysql/data

volumes:
  # PIC-SURE and IRCT database
  picsure-data:
  irct-data:
  # i2b2/tranSMART database
  i2b2transmart-data:
  # shared volume for R jobs
  rserve-jobs:

networks:
  public:
